name: Enterprise CI/CD Pipeline

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'
  GO_VERSION: '1.21'
  DOCKER_REGISTRY: 'docker.sxc.codes'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security & Vulnerability Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Secret scanning with GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality & Standards
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        if: hashFiles('package.json') != ''
        run: npm ci

      - name: Run ESLint
        if: hashFiles('package.json') != ''
        run: npm run lint || echo "No lint script found"

      - name: Run Prettier check
        if: hashFiles('package.json') != ''
        run: npm run format:check || echo "No format:check script found"

  testing:
    runs-on: ubuntu-latest
    name: Automated Testing
    needs: [code-quality]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        if: hashFiles('package.json') != ''
        run: npm ci

      - name: Run unit tests
        if: hashFiles('package.json') != ''
        run: npm test || echo "No test script found"

  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build & Security Scan
    needs: [security-scan, testing]
    if: hashFiles('Dockerfile') != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
